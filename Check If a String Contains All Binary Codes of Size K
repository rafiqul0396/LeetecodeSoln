Given a binary string s and an integer k.

Return True if every binary code of length k is a substring of s. Otherwise, return False.

////////////////////////////////////////////////////////////////////////////////////

####

Input: s = "00110110", k = 2
Output: true
Explanation: The binary codes of length 2 are "00", "01", "10" and "11". They can be all found as substrings at indicies 0, 1, 3 and 2 respectively.
Example 2:

Input: s = "00110", k = 2
Output: true



///"00110110"
k=2 total substring=2^k=4
therefore
//00
//01
//10
//11
when we take k=3 total subString =2^k=8
1.//000
2.//001
3.//010
4.//011
5.//100
6.//101
7.//110
8.//111



#### soln
class Solution {
    public boolean hasAllCodes(String s, int k) {
        Set set=new HashSet();//prevent repeated counting, a set can be used to store the result we previously counted.
        int start=0;
        int count =0;
        for(int i=0;i<s.length();i++){
            count++;
            if(count==k){
                set.add(s.substring(start,start+k));//add substring into 
                start++;
                count--;
                
        }
        }
        return set.size()==Math.pow(2,k);
        
    }
}

